plugins {
    id 'io.jmix' version '2.6.0'
    id 'java'
    id 'org.jetbrains.gradle.plugin.idea-ext' version '1.1.9'
}

apply plugin: 'org.springframework.boot'
apply plugin: 'com.vaadin'

jmix {
    bomVersion = '2.6.0'
    projectId = 'petclinic'
}


group = 'io.jmix'
version = '0.0.1-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        url = 'https://global.repo.jmix.io/repository/public'
    }
}

vaadin {
    optimizeBundle = false
}

dependencies {
    implementation 'io.jmix.rest:jmix-rest-starter'
    implementation 'io.jmix.authserver:jmix-authserver-starter'

    implementation 'io.jmix.core:jmix-core-starter'
    implementation 'io.jmix.data:jmix-eclipselink-starter'
    implementation 'io.jmix.security:jmix-security-starter'
    implementation 'io.jmix.security:jmix-security-flowui-starter'
    implementation 'io.jmix.security:jmix-security-data-starter'
    implementation 'io.jmix.localfs:jmix-localfs-starter'
    implementation 'io.jmix.flowui:jmix-flowui-starter'
    implementation 'io.jmix.flowui:jmix-flowui-data-starter'
    implementation 'io.jmix.flowui:jmix-flowui-themes'
    implementation 'io.jmix.datatools:jmix-datatools-starter'
    implementation 'io.jmix.datatools:jmix-datatools-flowui-starter'
    implementation 'io.jmix.fullcalendar:jmix-fullcalendar-flowui-starter'
    implementation 'io.jmix.gridexport:jmix-gridexport-flowui-starter'

    implementation 'io.jmix.flowui:jmix-flowui-kit'

    implementation 'org.springframework.boot:spring-boot-starter-web'


    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'io.jmix.flowui:jmix-flowui-test-assist'

    implementation 'org.apache.commons:commons-dbcp2'
    implementation 'org.postgresql:postgresql'

    // Selenium версии 4.9.1
    testImplementation 'org.seleniumhq.selenium:selenium-java:4.9.1'
    testImplementation 'org.seleniumhq.selenium:selenium-remote-driver:4.9.1'
    testImplementation 'org.seleniumhq.selenium:selenium-chrome-driver:4.9.1'

    testImplementation 'org.testng:testng:7.11.0'
    testImplementation 'com.codeborne:selenide:7.9.3'
    //testImplementation group: 'com.google.guava', name: 'guava', version: '31.0.1-jre'
    testImplementation 'org.postgresql:postgresql:42.7.7'

    implementation('org.jsoup:jsoup') {
        version {
            strictly '1.20.1'
        }
    }
    testImplementation group: 'io.qameta.allure', name: 'allure-selenide', version: '2.25.0'
    testImplementation 'io.qameta.allure:allure-testng:2.25.0'
    testImplementation 'io.qameta.allure:allure-commandline:2.25.0'
    testImplementation 'io.qameta.allure:allure-assertj:2.25.0'
    //testImplementation 'io.qameta.allure:allure-rest-assured:2.12.1'
    testImplementation 'io.qameta.allure:allure-java-commons:2.25.0'

    testImplementation 'org.aspectj:aspectjweaver:1.9.24'

    implementation 'org.json:json:20210307'
    implementation group: 'org.apache.httpcomponents', name: 'httpmime', version: '4.5.13'
    implementation 'org.apache.httpcomponents:httpcore:4.4.14'
    implementation 'org.apache.httpcomponents:httpclient:4.5.13'
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'org.apache.httpcomponents:httpclient:4.5.13'
    implementation 'org.apache.httpcomponents:httpcore:4.4.14'
    implementation 'org.apache.commons:commons-exec:1.3'
    implementation 'org.apache.commons:commons-compress:1.26.0'
    implementation group: 'org.springframework', name: 'spring-core', version: '6.1.3'
    implementation group: 'org.springframework', name: 'spring-web', version: '3.0.2.RELEASE'
    testImplementation group: 'jcifs', name: 'jcifs', version: '1.3.17'
    testImplementation group: 'org.apache.commons', name: 'commons-vfs2', version: '2.10.0'

    implementation 'io.rest-assured:rest-assured:5.5.5'
}

configurations.implementation {
    exclude group: 'com.vaadin', module: 'hilla'
    exclude group: 'com.vaadin', module: 'hilla-dev'
    exclude group: 'com.vaadin', module: 'copilot'
}

test {
    useJUnitPlatform()
}

idea {
    module {
        excludeDirs.addAll(files '.jmix', 'node_modules', 'src/main/frontend/generated/', 'src/main/bundles')
    }
}

vaadin {
    optimizeBundle = false
}
tasks.register('testNG', Test) {
    testClassesDirs = testing.suites.test.sources.output.classesDirs
    classpath = testing.suites.test.sources.runtimeClasspath
    jvmArgs '-Dselenide.browser=Chrome'
    jvmArgs "-Dtestng.dtd.http=true"
    useTestNG {
        suites 'src/test/resources/testng.xml'
    }
    //reports.html.destination = file("$buildDir/reports/testng")
    systemProperty 'selenide.savePageSource', 'false'
    systemProperty 'selenide.fastSetValue', 'false'
    systemProperty 'selenide.headless', 'false'
    systemProperty 'selenide.timeout', '10000'

    testLogging {
        exceptionFormat = 'full'
        showStackTraces = "true"
    }
    if (System.getProperty("selenoid") != null) systemProperty "selenoid", System.getProperty("selenoid")
    //systemProperty "selenoid", System.getProperty("selenoid")

}

bootBuildImage {
    if (rootProject.hasProperty('jmixDockerTag')) {
        imageName = rootProject['jmixDockerTag']
    }
}
